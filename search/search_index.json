{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":""},{"location":"#project-overview","title":"Project Overview","text":"<ul> <li>Project Name: Web App Deployment using TeamCity</li> <li>Team Name: Rising High Automation Leaders</li> <li>Adviser: Sir Kyle &amp; Sir Theo</li> </ul>"},{"location":"#project-description","title":"Project Description","text":"<p>In this project, we have designed a complete CI/CD pipeline using TeamCity. The pipeline is fully integrated with version control systems to automate the building and deployment process of applications to Kubernetes (K8s) clusters.</p> <p>The deployed application will be accessible on the public web and hosted on Kubernetes infrastructure.</p>"},{"location":"Architecture/","title":"Diagrams","text":""},{"location":"Architecture/#architecture","title":"Architecture","text":"<p>This CI/CD architecture uses GitHub, TeamCity, and automated deployment to streamline the development and deployment of a web app. Developers push changes to the dev branch, which are then reviewed and merged into the main branch. TeamCity will then do a build process, running a series of build steps to ensure functionality of the project. Once successful, the application will be deployed and exposed via load balancer for users to access.</p> <p> </p>"},{"location":"Architecture/#workflow","title":"Workflow","text":"<p>This diagram outlines an iterative process for building and deploying a web application using CI/CD. It begins with the Start phase, where planning, meetings, and requirements are finalized. The Set Up phase focuses on preparing prerequisites and learning necessary technologies. Next, the Create phase involves designing the web app and configuring the CI/CD build steps. The Build phase compiles, tests, and prepares the app for deployment. In the Testing phase, unit testing is conducted to ensure code quality before deployment. Finally, the Deploy phase rolls out the latest version of the app to the live environment</p>"},{"location":"Runbooks/","title":"Prerequisite","text":""},{"location":"Runbooks/#install-javajdk17-in-your-terminal","title":"Install Java/JDK17 in your terminal","text":"<p><pre><code>brew install openjdk@17\n</code></pre> </p>"},{"location":"Runbooks/#install-teamcity-on-premises","title":"Install Teamcity On-Premises","text":"<p>Download TeamCity Here</p>"},{"location":"Runbooks/#untar-the-file-given","title":"Untar the file given","text":"<pre><code>tar xzf TeamCity-2024.07.3.tar.gz\n</code></pre>"},{"location":"Runbooks/#start-teamcity","title":"Start TeamCity","text":"<p><pre><code>./Teamcity/bin/runAll.sh start\n</code></pre> </p>"},{"location":"Runbooks/#install-docker-desktop","title":"Install Docker Desktop","text":"<p>Download Docker Here</p> <p>Configure it with your own created account</p> <p></p>"},{"location":"Runbooks/#set-up-kubectl-on-your-machine","title":"Set up kubectl on your machine","text":"<p>Download kubectl Here</p>"},{"location":"Runbooks/#set-this-up-as-your-current-context","title":"Set this up as your current context","text":"<pre><code>apiVersion: v1\nkind: Config\npreferences: {}\n\nclusters:\n- cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJTnNiVnZVd2o1WFF3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRFd01ETXdOalV5TkRaYUZ3MHpOREV3TURFd05qVTNORFphTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUMvQWs2RHdLaW03dDI2ZWlZa3hTNGZUKys5czVLTmsrRE1EVFBmU0o4TXNZbnEwb21sNEloMHk0NC8KZGlXVmhHdE9QVFdiUFhOL1VGWW1LZ0JJVkN3K2V6MWx5MEsyRXljVlpyQ0NVS0w2VDNaSzNBTVpybTRsK1YySQpXUmg5UThlUVJVR0FMaElrNWxKczgrdWZZc1lUcjRScEEwUFlUWFpNcldvd1cxY0JKdXVRVTIxU2NIY2JjMFNGCld5Rkd1bzBsYUFZOHVFc1huSTVucld5K05JZ08vWVU5L2RTVzdMc0hsZXJEQzRMa09NaExaMkJLNVVtQjQydVkKMVB5UVdNTVd0RkxlV1F4SGNTNzN6MU9YN2V2VmF6TEorWG1sSi9CQUhjUjFWdkE1QndFaVVRcTQxZWV0SFBDTwowcnhZRmlUaUNBODVRY0ZsVkpwN0R0L1kxVlpWQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRblNJMFZWTkRoSndoOUQwR0FrZjYwQ1p2cit6QVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQVpzbnlzcDlncApSaGUxTzRnUGt1T2ZWWkExUEw4dEkybERPWmNnRjk1UnFZOFZ0Z2x2MXBMSEVzQnlSZ2tvbTBmM003WEJ1VU1jClBsZnpNN2dyaVF6c0FIUUxLTFpJb2dFMVFwcFFVRWdzQ1FZdUU3QXV1enorRG9aK0dUcXNYYVRVanRENHhqTDEKRm1MWW5iY3NkM1NTcTh3WDlKMkVSeVJ3dXFUVEZDNnVEYzNiVitwQ09IZGV0TXZiL1hRYzN0cTlrbUZub0ZCLwppUFJIaGpnQzViUWNYYk92ZHFsTnd6c202UGlnS3hXUFFkUTZ0NDc3ZkdjYzQxZWFFdWZZZ1h1dnVxSzdGeWxvCkxDWHZ2QWNGaEphUURjY3R2dUZ5Z001WGQwbGdTQzNsZ2crdGFxeXJWc2JNKzZUYkxvOHNxNCtaay8yWWpzT0EKRG1MeGNFLzVrWSthCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n    server: https://9c9ac1f7-1d29-46f9-81a5-364913e1d417.ap-south-1.linodelke.net:443\n  name: lke238244\n\nusers:\n- name: lke238244-admin\n  user:\n    as-user-extra: {}\n    token: eyJhbGciOiJSUzI1NiIsImtpZCI6InNlejVlMFJUNWw3U1FBYTlpS0xCWVFRYS1SZ1M0QWgzdWo2aUJVNXdDSXMifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJsa2UtYWRtaW4tdG9rZW4tY2hxcXYiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoibGtlLWFkbWluIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiZWMyMmNiNzgtYTc4Zi00OGZlLWFhOTktZmE2MmZmMDU0ZWEyIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50Omt1YmUtc3lzdGVtOmxrZS1hZG1pbiJ9.J8gij2fPqHkC7rtkDVjsv-JxD_vSGyEPuo1lblMuVN_g_4H40MtHGFpb6FpTty6BJzgDy2BiI78VT0_Kfvk7sZ31wEvrNrxPg--sMdxvRutwz0Y-FF6FG51c3Q3JiltGYMeB3sgTPSYyXinHqkVUa-HSfjyeQ_j1jT-8utqed1Yrl-O74AzAqJVw-n_41lntJ9ENDEsmtzh1goyQlsPbrClYAHDJFxCqx3Z5Euey1RokGZOaqr-9GL7giatsLuzPl-ghaF0RMVu3FkRbQ2fVNHVhB5Pohdsopjg6yGKxCkftPla_s0xBXVyFUkuHWrG2gTPpugxZTcBGq9P56mUyFQ\n\ncontexts:\n- context:\n    cluster: lke238244\n    namespace: default\n    user: lke238244-admin\n  name: lke238244-ctx\n\ncurrent-context: lke238244-ctx\n</code></pre>"},{"location":"Runbooks/#create-a-directory-and-paste-it-here","title":"Create a directory and paste it here","text":"<p><pre><code>&lt;HomeDir&gt;/.kube/config\n</code></pre> </p>"},{"location":"Runbooks/#set-up-teamcity","title":"Set Up TeamCity","text":""},{"location":"Runbooks/#a1-set-up-your-ssh-key","title":"A.1 Set Up Your SSH Key","text":"<ol> <li>Navigate to the Root Project under the Administration tab.</li> <li>Select SSH Key from the menu.</li> <li>Click Generate SSH Key and follow the steps below:<ul> <li>Pick Type: Select <code>RSA</code> as the key type.</li> <li>Input Name: Enter your preferred name for the key.</li> </ul> </li> <li>Click Generate to create the key.</li> <li>Copy the Public Key and add it to your Git repository's SSH configuration.</li> </ol>"},{"location":"Runbooks/#a2-set-up-your-build-features","title":"A.2 Set up your Build Features","text":"<ol> <li>Navigate to the Build Features under the Adminitration tab</li> <li>Click ++ Add build feature</li> <li>Choose Docker Support</li> <li>Add your credentials</li> <li>Click Save</li> </ol>"},{"location":"Runbooks/#b-creating-a-new-project","title":"B. Creating a New Project","text":"<ol> <li>Set up your project by providing the repository URL.</li> <li>For Authentication, select SSH Key.</li> <li>Choose the SSH key you recently generated.</li> <li>Click Proceed to continue with the project setup.</li> </ol>"},{"location":"Runbooks/#b05-configure-your-vcs","title":"B0.5 Configure your VCS","text":"<ol> <li>Go to edit configuration under your project</li> <li>Click Version Control Settings</li> <li>Edit your VCS roots</li> <li>Replace the default branch and branch specification to your specified branch name</li> <li>Save</li> </ol>"},{"location":"Runbooks/#b1-create-first-dev-build-configuration","title":"B1. Create First Dev Build Configuration","text":""},{"location":"Runbooks/#b11-modify-default-branch-and-branch-specification","title":"B1.1 Modify Default Branch and Branch Specification","text":"<ul> <li>Set the default branch and branch specification to the head of the <code>dev</code> branch.</li> <li>Click Proceed.</li> </ul>"},{"location":"Runbooks/#b12-add-1st-build-step-test","title":"B1.2 Add 1st Build Step - Test","text":"<ul> <li>Name: <code>Test</code></li> <li>Runner Type: Select Python.</li> <li>Command: <code>Pytest</code></li> <li>Environment Tool: Choose Venv.</li> <li>Dependencies: Add your <code>requirements.txt</code> file.</li> <li>Click Save.</li> </ul>"},{"location":"Runbooks/#b13-add-2nd-build-step-build","title":"B1.3 Add 2nd Build Step - Build","text":"<ul> <li>Name: <code>Build</code></li> <li>Runner Type: Select Command Line.</li> <li>Custom Script:     <pre><code>docker buildx build --no-cache --platform=linux/amd64 -t eywrld839/webapp:dev -t eywrld839/webapp:%build.number% -f ./utils/Docker/Dockerfile .\n</code></pre></li> <li>Click Save.</li> </ul>"},{"location":"Runbooks/#b14-add-3rd-build-step-docker-push","title":"B1.4 Add 3rd Build Step - Docker Push","text":"<ul> <li>Name: <code>Docker Push</code></li> <li>Runner Type: Select Docker.</li> <li>Docker Command: Pick Push.</li> <li>Image Name:Tag:     <pre><code>eywrld839/webapp:dev\neywrld839/webapp:%build.number%\n</code></pre></li> <li>Click Save.</li> </ul>"},{"location":"Runbooks/#b15-add-4th-build-step-deploy","title":"B1.5 Add 4th Build Step - Deploy","text":"<ul> <li>Name: <code>Deploy</code></li> <li>Runner Type: Select Command Line.</li> <li>Custom Script:     <pre><code>export $(grep -v '^#' .env | xargs)\nsed -i '' \"s/PLACEHOLDER_COLOR/$COLOR/g\" ./utils/deployments/deployment-dev.yaml\nkubectl apply -f ./utils/deployments/deployment-dev.yaml\nkubectl set image deployment/web-app-dev web-app-container=eywrld839/webapp:%build.number% -n dev\nkubectl set image deployment/web-app-canary web-app-container=eywrld839/webapp:%build.number% -n prod\n</code></pre></li> <li>Click Save.</li> </ul>"},{"location":"Runbooks/#c1-create-second-prod-build-configuration","title":"C1. Create Second Prod Build Configuration","text":""},{"location":"Runbooks/#c11-modify-default-branch-and-branch-specification","title":"C1.1 Modify Default Branch and Branch Specification","text":"<ul> <li>Set the default branch and branch specification to the head of the <code>prod</code> branch.</li> <li>Click Proceed.</li> </ul>"},{"location":"Runbooks/#c12-add-1st-build-step-test","title":"C1.2 Add 1st Build Step - Test","text":"<ul> <li>Name: <code>Test</code></li> <li>Runner Type: Select Python.</li> <li>Command: <code>Pytest</code></li> <li>Environment Tool: Choose Venv.</li> <li>Dependencies: Add your <code>requirements.txt</code> file.</li> <li>Click Save.</li> </ul>"},{"location":"Runbooks/#c13-add-2nd-build-step-build","title":"C1.3 Add 2nd Build Step - Build","text":"<ul> <li>Name: <code>Build</code></li> <li>Runner Type: Select Command Line.</li> <li>Custom Script:     <pre><code>docker buildx build --no-cache --platform=linux/amd64 -t eywrld839/webapp:latest -t eywrld839/webapp:%build.number% -f ./utils/Docker/Dockerfile .\n</code></pre></li> <li>Click Save.</li> </ul>"},{"location":"Runbooks/#c14-add-3rd-build-step-docker-push","title":"C1.4 Add 3rd Build Step - Docker Push","text":"<ul> <li>Name: <code>Docker Push</code></li> <li>Runner Type: Select Docker.</li> <li>Docker Command: Pick Push.</li> <li>Image Name:Tag:     <pre><code>eywrld839/webapp:latest\neywrld839/webapp:%build.number%\n</code></pre></li> <li>Click Save.</li> </ul>"},{"location":"Runbooks/#c15-add-4th-build-step-deploy","title":"C1.5 Add 4th Build Step - Deploy","text":"<ul> <li>Name: <code>Deploy</code></li> <li>Runner Type: Select Command Line.</li> <li>Custom Script:     <pre><code>export $(grep -v '^#' .env | xargs)\nsed -i '' \"s/PLACEHOLDER_COLOR/$COLOR/g\" ./utils/deployments/deployment-prod.yaml\nkubectl apply -f ./utils/deployments/deployment-prod.yaml\nkubectl set image deployment/web-app-prod web-app-container=eywrld839/webapp:%build.number% -n prod\n</code></pre></li> <li>Click Save.</li> </ul>"},{"location":"Solutions/","title":"Solutions","text":"<p>Limitations</p> <ul> <li>Direct pushes or commits to the main branch of the GitHub repository are not allowed. Only pull requests (PRs) are permitted, requiring review and approval before merging.</li> <li>Git branch protection cannot be enforced due to restrictions on the private repository.</li> <li>Only color names must be input in the environment variable; hex codes are not allowed.</li> </ul> <p>Using TeamCity, the developers have set up a CI/CD system that handles the following:</p>"},{"location":"Solutions/#a-web-app-deployment","title":"A. Web App Deployment","text":"<ul> <li>The web application successfully displays a plain colored background when accessed using hex color codes.</li> <li>The web application is exposed using a load balancer and is accessible over the internet.</li> <li>The web application is built using Flask and compiled in TeamCity.</li> <li>The web application is deployed using a canary deployment strategy.</li> </ul>"},{"location":"Solutions/#b-version-control-managementcode-management","title":"B. Version Control Management/Code Management","text":"<ul> <li> <p>Using Git/GitHub to track the updates and changes of the project. It has two branches: <code>main</code> and <code>dev</code>.</p> </li> <li> <p>Branch protection was not enforced due to the repository being private. Solution: The developers were able to practice branch protection by cloning the repository to a public repository and then implemented the branch protection.</p> </li> <li> <p>All changes were submitted through Pull Requests and were approved before being merged.</p> </li> <li> <p>The GitHub repository served as the main storage for all data related to the project.</p> </li> </ul>"},{"location":"Solutions/#c-teamcity-as-cicd-auto-testing","title":"C. TeamCity as CI/CD (Auto-Testing)","text":"<ul> <li>Once developers made changes to the GitHub repository, TeamCity will automatically run unit tests and rebuild the project. This ensures that the changes made to the project will work well and won't continue upon failure.</li> </ul>"},{"location":"Solutions/#d-deployment","title":"D. Deployment","text":"<ul> <li>When all tests pass, TeamCity will now be able to automatically deploy the project to the live environment. The web application will now be accessible to the users.</li> </ul>"},{"location":"Solutions/#tools","title":"Tools","text":"Method Description <code>Pytest</code> a tool to write and run tests. <code>Flask</code> a python web framework for building web applications and APIs. <code>TeamCity</code> a CI/CD server used for automating processes like building, testing, and deploying applications <code>Github</code> tool used for version control management and collaborative purposes <code>Webcolor</code> tool to covert color names to hex codes <code>Werkzeug</code> a component of Flask used as a toolkit for building web applications. <code>Docker</code> used to build, push and pull images. Also used for containerization of application <code>Kubernetes</code> used for automation of deployments, scaling, and management. <code>Java/JDK17</code> (Java Development Kit) that provides tools for developing and running Java applications. <code>Homebrew</code> open-source software package management system use for installation of softwares <code>Python</code> programming language used for web development <code>Kubectl</code> a command-line tool used to interact with Kubernetes. <code>Pip</code> Used for installing, upgrading, and manage Python  packages and libraries."},{"location":"Solutions/#disaster-recovery-plan","title":"Disaster Recovery Plan","text":""},{"location":"Solutions/#a-cicd-failure","title":"A. CI/CD Failure","text":"<p>To test if automated unit testing is working, below are scenarios that break the code and solutions to fix them:</p>"},{"location":"Solutions/#syntax-error-or-logical-error-in-git","title":"Syntax Error or Logical Error in GIT","text":"<p>If the value of the <code>COLOR</code> variable in the <code>.env</code> file is incorrect, like:</p> <pre><code>COLOR=Blueeee\n</code></pre> <p>It will result in a build failure in pytest; Shown below is the error message</p> <pre><code>================ short test summary info =================== \nFAILED tests/test_main_server.py::test_background_color - ValueError: \"Blueeee\" is not defined as a named color in css3\n================ 1 failed in 0.35s =========================\n</code></pre>"},{"location":"Solutions/#to-fix","title":"To Fix:","text":"<p>Ensure that the value in the variable name is valid (a recognized CSS color name).</p> <ol> <li> <p>Open your <code>.env</code> file using the command:     <pre><code>vi .env\n</code></pre></p> </li> <li> <p>Change the value:     <pre><code>COLOR=&lt;validColorName&gt;\n</code></pre></p> </li> </ol> <p>Example: <pre><code>COLOR=BLUE\n</code></pre></p> <p></p>"},{"location":"Solutions/#b-breaking-config-change-in-teamcity","title":"B. Breaking Config Change in TeamCity","text":""},{"location":"Solutions/#disabled-a-build-step","title":"Disabled a Build Step","text":"<p>When a build step is in a disabled status, the build won't be successful and will result in an error.</p> <p>Example Error Message:</p> <pre><code>Step 3/4: Push (Docker) &lt; 1s\nStarting: /bin/sh -c docker push eywrld839/webapp:dev &amp;&amp; docker push eywrld839/webapp:20 in directory: /Users/academy/Downloads/TeamCity/buildAgent/work/40d27028a6259cf2\nThe push refers to repository [docker.io/eywrld839/webapp]\ntag does not exist: eywrld839/webapp:dev\nProcess exited with code 1\nProcess exited with code 1 (Step: Push (Docker))\nRemoving pushed images/tags from build agent: eywrld839/webapp:dev eywrld839/webapp:20\nStep Push (Docker) failed\n</code></pre>"},{"location":"Solutions/#to-fix_1","title":"To Fix:","text":"<ol> <li> <p>Navigate to: Projects &gt; (Project Name) &gt; Build Configuration &gt; Edit Configuration &gt; Build Steps.</p> </li> <li> <p>Click the dropdown button of the disabled build step, then select Enable Build Step.</p> </li> </ol> <p></p>"},{"location":"Solutions/#c-merge-conflicts","title":"C. Merge Conflicts","text":"<p>Merge conflicts occur whenever a file/data is manipulated or modified from two different branches or sets of changes.</p> <p>In the example below, we introduce a merge conflict error by changing the value within the <code>.env</code> file at the same time and on the same line.</p> First POVSecond POV <pre><code>vi .env\nCOLOR=White\n</code></pre> <pre><code>vi .env\nCOLOR=Yellow\n</code></pre> <p></p> <p>After GIT PUSH, You will encounter git merge conflict since the same file was editted at the same time without pulling first</p> <pre><code>Auto-merging .env\nCONFLICT (content): Merge conflict in .env\nAutomatic merge failed; fix conflicts and then commit the result.\nacademy@Academy16s-MacBook-Pro devwebapp % git status\nOn branch dev\nYour branch and 'origin/dev' have diverged,\nand have 1 and 1 different commits each, respectively.\n(use \"git pull\" if you want to integrate the remote branch with yours)\n\nYou have unmerged paths.\n(fix conflicts and run \"git commit\")\n(use \"git merge --abort\" to abort the merge)\n\nUnmerged paths:\n(use \"git add &lt;file&gt;...\" to mark resolution)\n\nboth modified:   .env\n</code></pre>"},{"location":"Solutions/#to-fix_2","title":"To Fix:","text":"<ol> <li> <p>Retrieve the latest changes from the remote repository without merging them into your current branch:     <pre><code>git fetch origin\n</code></pre></p> <ul> <li>This will retrieve the latest changes but won\u2019t automatically merge them into your current branch.</li> </ul> </li> <li> <p>Merge the latest changes from the remote <code>dev</code> branch into your local branch:     <pre><code>git merge origin dev\n</code></pre></p> <ul> <li>This will merge the latest changes from the <code>dev</code> branch into your local branch.</li> </ul> </li> </ol> <p>This process will show you the file that has a merge conflict.</p>"},{"location":"Solutions/#to-resolve-the-merge-conflict","title":"To Resolve the Merge Conflict:","text":"<ol> <li> <p>Open the <code>.env</code> file:     <pre><code>vi .env\n</code></pre>    This will show the data that needs to be changed/corrected:     <pre><code>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\nCOLOR=White\n=======\nCOLOR=Yellow\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; origin/dev\n</code></pre></p> </li> <li> <p>Save the changes and add the file to the staging area:     <pre><code>git add .env\n</code></pre></p> </li> <li> <p>Commit the changes:     <pre><code>git commit -m \"Resolved merge conflict for .env file\"\n</code></pre></p> </li> <li> <p>Push to the dev repository:     <pre><code>git push origin dev\n</code></pre></p> </li> </ol>"},{"location":"Solutions/#to-merge-changes-from-dev-to-main","title":"To Merge Changes from Dev to Main:","text":"<ol> <li>Create a Pull Request from <code>dev</code> to <code>main</code>.</li> <li> <p>Specify the description of the change: \"Change Background color to Yellow\".</p> </li> <li> <p>Add a reviewer to check your pull request, then wait for approval.</p> </li> <li> <p>Once approved and merged:</p> </li> <li>With the updated <code>main</code> branch in GitHub, TeamCity will now rebuild and deploy the new web application with the specified background color.</li> </ol>"},{"location":"requirements/","title":"Project Requirements","text":"<p>The following key tasks are necessary for the successful deployment of the web application using TeamCity:</p>"},{"location":"requirements/#web-app-deployment","title":"Web App Deployment","text":"<ul> <li> <p>Web app requirements</p> <ul> <li>The web app displays a plain colored background when accessed.</li> <li>The web app must be accessible over the internet.</li> <li>The web-based source code (e.g., Flask or Java) must be able to be built and compiled in TeamCity.</li> </ul> </li> <li> <p>K8s requirements</p> <ul> <li>The app must be set to be deployed using canary deployment strategy.</li> <li>For every deployment, the app must always be running five (5) healthy replicas.</li> </ul> </li> </ul>"},{"location":"requirements/#teamcity-as-cicd","title":"TeamCity as CI/CD","text":"<ul> <li>Deploy TeamCity in your system to be used for CI/CD purposes<ul> <li>The Git repository containing the source code of the web app must be integrated with TeamCity.</li> <li>An automated unit test must be created.</li> <li>Automate deployment of the web app on the K8s cluster using TeamCity.</li> </ul> </li> </ul>"},{"location":"requirements/#version-control","title":"Version Control","text":"<ul> <li> <p>The Git repo must have two branches that correspond to an environment:</p> <ul> <li><code>main/master</code> \u2013 production environment, main source of your CI/CD pipeline.</li> <li><code>dev</code> \u2013 development environment, contains fixes and/or features, to be merged to <code>main/master</code> branch as necessary.</li> </ul> </li> <li> <p>Branch protection must be implemented in the <code>main/master</code> branch:</p> <ul> <li>PRs must have an approval before getting merged.</li> <li>A status check must be implemented and must all be passing before a PR becomes available for merging.<ul> <li>Status check requirement: the build in TeamCity must be successful.</li> </ul> </li> </ul> </li> <li> <p>The GitHub repository must be used as the main storage of all info for the project: from the automation codebase, infrastructure configurations, up to project documentation.</p> </li> <li> <p>To show that pull request was strictly practiced, the branches\u2019 commit history must only consist of merged pull requests.</p> </li> </ul>"},{"location":"requirements/#ops-simulation","title":"Ops Simulation","text":"<ul> <li> <p>Introduce failures in your system based on (but not limited to) the following:</p> <ul> <li>CI/CD failures:<ul> <li>A breaking code change in the web app should be introduced to test if your automated unit tests are working:<ul> <li>syntax errors, or</li> <li>logical errors such as checking if the background color of the web app was an invalid hex value.</li> </ul> </li> <li>A breaking config change in TeamCity should be introduced.</li> <li>Apply the fix in Git/TeamCity in the code or config.</li> </ul> </li> <li>Version control failures:<ul> <li>Introduce a merge conflict by having different versions of a certain file on the two (2) branches \u2013 as if two people have changed the same lines in the file.<ul> <li>Show how to resolve the merge conflict, and</li> <li>Merge the resolved conflict into <code>main</code> branch, then build and deploy the app.</li> </ul> </li> </ul> </li> </ul> </li> <li> <p>Create respective runbooks that address each failure above.</p> </li> </ul>"}]}